version : '3'

networks:
  nw:

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    volumes:
       - ./mysql-storage:/var/lib/mysql # Persistent storage
    environment:
      # Default MYSQL-conf
      MYSQL_DATABASE: ${db}
      MYSQL_USER: ${user}
      MYSQL_PASSWORD: ${pw}
      MYSQL_ROOT_PASSWORD: "root_${pw}"
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - nw
  
  earlyaccess.htb:
    build:
      context: .
      dockerfile: .docker/Dockerfile-webserver
    image: webserver
    container_name: webserver
    environment:
      ADMIN_PW: ${ADMIN_PW}
    ports:
      - "443:443"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
      - api
    networks:
      - nw
    
  api:
    build:
      context: .
      dockerfile: .docker/Dockerfile-api
    container_name: api
    image: "api"
    restart: on-failure
    ports:
      - "8000:5000"
    volumes:
      - ./key_validator/api:/opt/api # Source-code
    environment: 
      # Flask config - dev or prod
      FLASK_ENV: development # production || development
      DEBUG: "True" #"False" ||"True"
    networks:
      - nw
    
  admin-simulation:
    build:
      context: .
      dockerfile: .docker/Dockerfile-admin
    image: admin-simulation
    container_name: admin-simulation
    environment:
      ADMIN_PW: ${ADMIN_PW}
    volumes: 
      - ./admin_automation:/root/admin_automation
    depends_on:
      - earlyaccess.htb
    networks:
      - nw

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - nw
